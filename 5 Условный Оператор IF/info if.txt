в программировании условия помогают разделять выполнение логики 
добавляют иллюзию наличия интеллекта программе с помощью условий ты указываешь как действовать программе в том или ином случае
условие состоит из двух частей, в первой ты указываешь когда условие верное, во второй когда не верное

ЕСЛИ у тебя есть кампуктер ТО смотри мои видосы.
ЕСЛИ ты одобряешь ТО подпишись, поставь лайк, репостни
ЕСЛИ -> IF 

формат написания: 
IF (условие) действие

let a = 0 
let liked = true;
if (liked)
    a = 5;
output - 5 так как после if условие true

let a = 0 
let liked = false;
if (liked)
    a = 5;
output - 0

т.е. если в условии false, то дальнейшее действие выполняться не будет

всегда false - 0; ""; null; undefined; NaN
всё остальное преобразуется в true

a = 0
if (0)
    a = 5 запись не будет выполнена потому что ноль преобразуется в false 

a = ""
if (a = "")
    a = 5 запись не будет выполнена тк "" это false 

a = 0
if ( 5 )
    a = 5 выполниться тк 5 будет преобразована к true

Что делать когда тебе нужно выполнить действие когда значение false? нужны операторы сравнения 
a = 0
a === 0 --> true так как 0 равен 0
a < 5 --> true тк 0 < 5

Что делать когда тебе нужно выполнить действие если в условии false? для этого нужно написать такое условие чтобы оно возвращало true
false === false --> true
или
liked = false 
if (liked === false)
    a = 5;
или
    a = 0 
    if (a > 5 === false) то есть (false === false) 
    a = 5

а вот те значения которые автоматом преобразуются в false условия можно писать так
0 == false --> true, но не так 0 === false --> false, всё потому что "===" при проверке ещё и тип учитывает

сокращения условий, могут быть двух типов 
1. сокращения проверки на true - необходимо в условии прописать значение без оператора сравнения, это значение будет пытаться преобразоваться к булевому и если оно преобразуется в true то условие выполнится, к true преобразуются все кроме тех что я озвучивал ранее 0;Nan;null;"";undefined 
    a = 0
        if ( 5 ) он же true 
        a = 5
2. сокращения проверка на false
 == false
 === false  => !
 т.е
    a = 0
    liked = false
    if (!liked) или (liked == false)
        a = 5;
то же самое можно записать со значениями которые всегда преобразуются в false 
!0 --> 0 == false --> true
!null --> null == false --> true
!undefined --> undefined == false --> true
!NaN --> NaN == false --> true
!" --> " == false --> true

теперь обсудим действия после условия, по дефолту будет выполняться одно действие

a = 0
if (false)
    a = 5
    a = a + 10

ты ждёшь что в "a" будет 0 поскольку действие не выполняется? а нет по дефолту выполняется одно действие
то есть при таком написании выполняется только 
if (false)
    a = 5
а вот a = a + 10 это уже действие которое никак не связанно с условием и в данном примере оно выполнится в любом случае и в конце в "а" будет 10
если надо выполнить 2 или больше действий то нужно использовать блоки {} если нужно сделать 0 и более действий то делаем блок с ними, для этого действие оборачиваем в фигурные скобки  
a = 0
if (false) {
    a = 5
    a = a + 10
}
если нужно ноль действий то пишем пустые скобки 
a = 0
if (false) {
}
кстати в варианте который без фигурных скобок не получится сделать условие без действия тот формат требует и выполняется всегда одно действие, в случае же со скобками можешь писать всё что душе угодно

действия которые выполняются если условия не верное 
ЕСЛИ хватает денег на машину ТО куплю машину
ИНАЧЕ куплю пирожок
ИНАЧЕ -> else
всегда выполняется или if или else если мы попали в if то в else уже не попадём и наоборот

a = 100
if (a >= 500000) или же (100 >= 500000) --> false, переходим к else 
    a = a - 500000;
else    
    a = a - 50
код здесь без фигурных скобок а это значит что if что else могут выполнить лишь одно действие

a = 100
if (a >= 500000) { 
    a = a - 500000;
} else {   
    a = a - 50
}
если нужно выполнить несколько действий, пишем со скобками. с {} действий можно добовлять сколько угодно

ЕСЛИ хватает на машину ТО куплю машину
    ЕСЛИ осталось на колёса ТО куплю колёса
ИНАЧЕ куплю пирожок
a = 100; столько денег сейчас 
if (a >= 500000) { если хватит на машину ( у меня больше 500к)
    a = a - 500000; куплю машину
    if (a > = 10000) { если ещё остается на колёса ( у меня ещё 30к есть)
        a = a - 10000 куплю колёса ( с бабла ещё 30к отнимаем)
    }
} else {
    a = a - 50; Иначе просто куплю пирожок
}

a = 100;
if (a >= 500000) { 
    a = a - 500000; 
    if (a >= 10000) {
        a = a - 10000 
    }
} else {
    a = a - 50;
    }
    
несколько условий - какое условие подойдёт такое и выполняется а остальные пропускаются 
ЕСЛИ хватает на х5 ТО куплю Х5
ИЛИ ЕСЛИ хватает на велосипед ТО куплю велосипед
ИЛИ ЕСЛИ хватает на такси ТО закажу такси
ИНАЧЕ куплю пирожок
a = 13000
if (a>= 500000) {       --> false 
    a = a - 500000;
} else if (a>=100000) { --> false 
    a = a - 100000;
} else if (a>=12000) {  --> true 
    a = a - 12000;
} else {                --> false 
    a = a - 50
}

в этом примере зайдя хотябы в одно условие в следующее мы уже не попадём тк мы нашли подходящее нам условие 
