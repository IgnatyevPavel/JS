унарные - одно значение

бинарные - два значения

1. операторы с числами
    операторы с двумя значениями: с ними можно использовать числа и переменные
    
    - оператор "=" с его помощью можно записать значение в переменную
    синтаксис у него такой "имя переменной" = "выражение"
    
    - оператор "+" используется чтобы сложить два числа
    - оператор "-" используется чтобы вычесть одно число из другого
    - оператор "*" используется чтобы умножить одно на другое число
    - оператор "/" используется чтобы поделить одно число на другое число
    - оператор "**" возведения в степень. это умножение числа самого на себя несколько раз
    - оператор "%" остаток от деления. 
        28 % 5 = 3
        28 / 5 = 5.6 - не делится без остатка, не подходит
        27 / 5 = 5.4 - тоже не делится без остатка 
        25 / 5 = 5 - а 25 делится без остатка
        28 - 25 = 3 - остаток от деления 
            а когда 10 % 100 = 10 
                    12 % 100 = 12
                    т.е. остатком всегда будет являться левое значение

2. приоритет операторов "*" и "/" выполняется раньше чем "+" и "-"

операторы которые используют одно значение
    оператор "+a" если после этого + будет не числовое значение JS будет пытаться преобразовать его в число +false; +'1'
    оператор "-a" используется для того чтобы сделать число отрицательным  -true -false
    a = 5 
    -a = -5
    но в переменной до сих пор 5 тк мы её не обновляли.
    оператор "++" инкримента используется с переменными и не может использоваться просто со значениями у него усть форма применения ++ до переменной и ++ после переменной 
    ++a префиксный инкримент, делает увеличение значения на единицу и сразу возвращает результат, при этом значение сразу изменяется и в переменной 
    a++ инкремент после переменной, постфиксный инкремент. увеличивает значение на единицу, но не сразу
    --а и а-- то же самое, только оператор делает -1 к значению

бинарный "+"
    "a" + "b" можно использовать со строками, при использовании мы обьединяем их
    при сложении 1 + "1" = 11(строка) следует учитывать что если в выражении одно из выражений строка то всё будет строкой и они будут обьединяться 
    если 1 + 1 + "1" = 12(строка,суммируются в порядке приоритета)
    остальные операторы, встречая строку, преобразовывают её в число "5" * 2 = 10

операторы сравнения, результатом использования этих операторов будет булиевое значение
    оператор ">"(больше) используется чтобы посмотреть больше ли одно число к другому 
    если мы сравниваем цифры то тут всё понятно, если сравниваем "строки" то работает это несколько иначе, внутри строки каждый символ имеет своё числовое значение (см. базовая таблица кодировки ASCII) и поэтому при сравнивании строк, они будут сравниваться посимвольно "~" = 126, а "!" = 33, при сравнении "~">"!"
    если сравниваются разные типы то они приобразовываются к числу "10" > 4 = true
    оператор "<"(меньше) используется чтобы проверить меньше ли одно число к другому. правила такие же как у ">"
    оператор ">=" помимо сравнения больше, они ещё могут быть равны
    оператор "<=" помимо сравнения меньше, они ещё могут быть равны
    оператор "=="(равенства) проверяет равны ли значения, при сравнении типов оно преообразует всё в числа, при сравнении строк так же сравниваются коды символов
    оператор "==="(строгое равенство) проверяет равны ли значения, а ещё и тип

сокращенные присваивания 
    "+="
        пример
        а = 5
        а += 10
        output - 15
        т.е. прибавляется то число после "+=" один раз
